const { task, src, dest, series, parallel, watch } = require("gulp");
const sass = require("gulp-sass")(require("dart-sass"));
const concat = require("gulp-concat");
const browserify = require("browserify");
const buffer = require("vinyl-buffer");
const source = require("vinyl-source-stream");
const babelify = require("babelify");


task("concat", () => {
  return src("./src/js/**/*.js")
    .pipe(concat("index.js"))
    .pipe(dest("./dist/gen"));
});

// TODO: task browserify
task("browserify", function () {
  const b = browserify({
    //index.js is generated by task "cat"
    entries: "./dist/gen/index.js",
    //a source map isn't very useful right now because
    //the source files are concatenated together
    debug: false,
  });
  return b
    .transform(
      babelify.configure({
        presets: ["@babel/preset-env"],
        plugins: ["@babel/transform-runtime"],
      })
    )
    .bundle()
    .pipe(source("main.js"))
    .pipe(buffer())
    .pipe(dest("./dist/js"));
});
task("sass", () => {
  return src("src/scss/*.scss").pipe(sass()).pipe(dest("dist/"));
});
task("compile",series("concat","browserify","sass"));
task("watch", () => {
  return watch(
    ["./src/scss/**/*.scss", "./src/js/**/*.js"],
    series("compile")
  );
});
task("default", series( "compile","watch"));
